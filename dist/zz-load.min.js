var zzLoad=function(){"use strict";var d={rootMargin:"0px",threshold:0,onLoad:function(){},onError:function(){}},s=function(i,d,s,r){var o=function(o,e){c.processed(i);var n=document.createElement("img"),a=window.CustomEvent;n.onload=function(){var r=n.src,t=new a("zzload:load",{detail:{element:i,src:r}});c.loaded(i),i.dispatchEvent(t),d(i,n.src),o&&o(i,n.src)},n.onerror=function(){var r=n.src,t=new a("zzload:error",{detail:{element:i,src:r}});c.failed(i),i.dispatchEvent(t),s(i,r),e&&e(i,r)};var r=i.getAttribute("data-zzload-source-img");if(r)return n.src=r,i.src=r,null;var t=i.getAttribute("data-zzload-source-background-img");return t?(n.src=t,i.style.backgroundImage="url(".concat(t,")"),null):void 0};return r&&window.Promise?new Promise(function(r,t){o(r,t)}):(o(),null)},c={processed:function(r){r.setAttribute("data-zzload-is-processed",!0)},loaded:function(r){r.setAttribute("data-zzload-is-loaded",!0)},failed:function(r){r.setAttribute("data-zzload-is-failed",!0)}},u=function(r){return"true"===r.getAttribute("data-zzload-is-processed")};return function(n,r){var e,a=function(){var r=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t={};for(var o in d)t[o]=r.hasOwnProperty(o)?r[o]:d[o];return t}(r),i=null;return window.IntersectionObserver&&(i=new window.IntersectionObserver((e=a,function(r,o){r.forEach(function(r){if(0<r.intersectionRatio||r.isIntersecting){var t=r.target;o.unobserve(t),u(t)||s(t,e.onLoad,e.onError)}})}),{rootMargin:a.rootMargin,threshold:a.threshold})),{observe:function(){for(var r,t=(r=n)instanceof window.Element?[r]:r instanceof window.NodeList?r:r&&r.jquery?r.toArray():("string"!=typeof r&&(r=".zzload"),document.querySelectorAll(r)),o=0;o<t.length;o++){var e=t[o];u(e)||(i?i.observe(e):s(e,a.onLoad,a.onError))}},triggerLoad:function(r){if(!u(r))return s(r,a.onLoad,a.onError,!0)}}}}();